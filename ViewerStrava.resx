<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnMapFullscreen.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAHzSURBVDhPnZPtTtpgFMd7F72bKSgDCSpDFChIeRs4
        LUysLNFFsgyzRUTnJmYx7E3lzW10c0WGcUSMMqbZl2WJ2UXwhSv476lLp0Jdwpr80jwn53fOk55Taro+
        Bgn+awBTNT/CR7dBHkoJf8kBX9EOzycbXB+scBZGcF5g+9cGcmev/ilLEJkOFFkkvy1h7WQZjrdmUFLn
        zNlLpH48w+PTKEJVr6Aoiwzt2bE1o5V7eFSNYqUWB5M3gZo69iNSm0DiewzpnynM1+9j4ourrYh7x9aY
        q0SwWk+ALwVhy5lgyRhBTZJr3z300cEDb3Ph5AEeHs/gzh5bbi3AChYxUg6B3+Uk+bzB8ObARQJXcdPj
        +67G2J5TlGOt2LeHyrIscyXhf1AMdoJisBMUg51w5UC+tDD6frhtAjLGF3pxYF3XMDzX0nKM8ooMef+R
        +RKHcHFcGlPbJAZT+rIvxyKQ90C/pmnqVntp7dMesiAfrSAyWQ4O8eo8pndDsKSNjdYC/es6wZ0ZxYwY
        gTfNwpDUQvNERTqTHyJejWH2Mw++yElykyzI3ytepi+pEZxvGPiyTkwWOPQudYNyvDNj4SCG2P4c7Fkz
        zBvKsszNFTXChSB4IQR1ogsUkx+CNXsLI1uDkgzTawPJu17WLKvQQzqrF7ugit/AbwOPtI0m20B+AAAA
        AElFTkSuQmCC
</value>
  </data>
</root>